version: '1.0'
stages:
- prepare
- build
- deploy
- qa
steps:
  main_clone:
    title: Clone main repository
    type: git-clone
    stage: prepare
    repo: '${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}'
    revision: '${{CF_BRANCH}}'
    git: github
  build_application_images:
    type: parallel
    stage: build
    steps:
      showcase:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        image_name: geppetto-showcase
        title: Showcase
        working_directory: ./
  deployment:
    stage: deploy
    image: codefresh/cfstep-helm:3.4.1
    title: Installing chart
    environment:
    - CHART_REF=./deployment/helm
    - RELEASE_NAME=${{NAMESPACE}}
    - KUBE_CONTEXT=${{CLUSTER_NAME}}
    - NAMESPACE=${{NAMESPACE}}
    - CHART_VERSION=${{DEPLOYMENT_PUBLISH_TAG}}
    - HELM_REPO_USE_HTTP=false
    - HELM_REPO_CONTEXT_PATH=
    - TIMEOUT=600s
    - VALUESFILE_values=./deployment/helm/values.yaml
    - CUSTOM_tag=${{CF_BUILD_ID}}
    - CUSTOM_apps_showcase_harness_deployment_image=${{REGISTRY}}/geppetto-showcase:${{CF_BUILD_ID}}
    - CUSTOM_namespace=${{NAMESPACE}}
  test_image:
    title: "Building Integration Image"
    type: "build"
    stage: "qa"
    image_name: "gep-e2e"
    tag: "${{CF_BUILD_ID}}"
    working_directory: .geppetto-showcase/tests/e2e
    disable_push: True
  e2e_tests:
    title: "End to End tests"
    stage: "qa"
    image: '${{test_image}}'
    fail_fast: false
    commands:
      - bash -c "rm -rf /codefresh/volume/cde-mapper/tests"
      - echo $url
      - bash -c "cd / && npm run puppeteer_test"      
